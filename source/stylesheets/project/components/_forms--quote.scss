@mixin inputWithSelect($reservedSpace, $amountInputs:1) {
	padding-right: $reservedSpace;
	overflow: hidden;

	> input {
		width: 100%/$amountInputs;
		box-sizing: border-box;
		float: left;

		&:not(:first-child) {
			border-left: solid 1px cl('grey-light');
		}
	}

	.custom-select {
		width: $reservedSpace;
		height: 100%;
		position: absolute;
		top: 0;
		right: 0;
		border-left: solid 1px cl('grey-light');
		overflow: hidden;
	}
}

.multiple-inputs {
	@extend %border-base;
	position: relative;
	input { border: none; }
	@include focusing('element');
}

@each $version in 20, 30, 40, 50 {
	.multiple-inputs--select-#{$version} {
		@include inputWithSelect(calc(#{$version}*1%));
	}
}

.multiple-inputs--3inputs {
	@include inputWithSelect(20%, 3);
}

.custom-select {
	position: relative;
	padding: 0;
	&:after {
		content: '';
		display: block;
		width: 0;
		height: 0;
		border-left: 6px solid transparent;
		border-right: 6px solid transparent;
		border-top: 6px solid cl('grey');
		position: absolute;
		top: 50%;
		right: em(10px);
		margin-top: em(-3px);
	}

	select {
		width: 100%;
		height: 100%;
		padding: 0 em(10px);
		border: none;
		box-shadow: none;
		background-color: transparent;
		background-image: none;
		-webkit-appearance: none;
		   -moz-appearance: none;
				appearance: none;
	}

	&--independent {
		@extend %border-base;
		@include focusing('element');
	}
}

.form__options {
	font-weight: 600;
	font-size: em(11px);

	a {
		display: block;
		color: cl('grey-light-font');
		padding: rem(5px) rem(10px);
		border: solid 1px cl('grey-light');
		transition: color 0.2s, border-color 0.25s;
		border-left: transparent;
		border-right: transparent;
	}

	li {
		float: left;
		margin: 0;
		&:first-child a {
			border-radius: $radius 0 0 $radius;
			border: solid 1px cl('grey-light');
		}
		&:last-child a {
			border-radius: 0 $radius $radius 0;
			border: solid 1px cl('grey-light');
		}
		// &:first-child,
		// &:last-child {
		// 	a.active,
		// 	a:hover { border-color: cl('blue'); }
		// }

		// &:not(:last-child) {
		// 	a.active,
		// 	a:hover {
		// 		background-color: red;
		// 		color: cl('blue');
		// 		border: solid 1px cl('blue');
		// 		margin: 0 -1px;
		// 	}
		// }
	}
}

.shipment-steps {
	overflow: hidden;
	border-top: solid 1px cl('grey-light');
	border-bottom: solid 1px cl('grey-light');

	li {
		float: left;
		margin: 0;
		&:not(:first-child) {
			padding-left: em(15px);
		}
	}

	a, span {
		display: block;
		color: cl('blue-light');
		padding: em(10px) 0;
		position: relative;
		&:after {
			content: '';
			display: block;
			width: 100%;
			height: 2px;
			background: cl('blue');
			position: absolute;
			bottom: 0;
			opacity: 0;
			transition: opacity 0.2s;
		}

		&.passed,
		&:hover,
		&.active {
			cursor: pointer;
			color: cl('blue-darkest');
		}

		&:hover,
		&.active {
			&:after {
				opacity: 1;
			}
		}
	}

	@include bp('md+') {
		text-align: center;
		li {
			float: none;
			display: inline-block;
			padding: 0 em(25px);
		}
	}
}

.total,
.add-item {
	display: block;
	border-radius: $radius;
	background: cl('blue-lightest');
	color: cl('blue-light');
	line-height: em(46px, $font-size-default);
	padding: {
		left: $gutter;
		right: $gutter;
	}
}

.add-item {
	&:hover {
		background-color: cl('blue-light');
		color: cl('white');
	}

	i {
		font-weight: 600;
		font-size: em(20px);
		margin-right: em(10px, 20px);
	}
}

.item-has-rows {
	> .row:not(:first-child) {
		padding-top: em(10px);
	}
	@include bp('lg-') {
		.has-subs > .md-6 {
			padding-top: em(10px);
		}
	}
}

.form-shipment {
	@include bp('lg-') {
		> .row > .md-6 { padding-top: em(10px); }
	}
}

.option-has-icon {
	display: block;
	padding: em(20px);
	text-align: center;
	border: solid 1px cl('grey-light');
	color: cl('grey-light-font');
	transition: border-color 0.2s;
	line-height: 1.4;
	&:hover {
		border-color: cl('blue');
	}
	i {
		display: block;
		margin-bottom: 10px;
	}
}